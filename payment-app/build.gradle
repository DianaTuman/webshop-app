plugins {
    id "org.openapi.generator" version "7.12.0"
}

dependencies {
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/api-spec.yaml")
    outputDir.set("$projectDir/build/generated")
    ignoreFileOverride.set(".openapi-generator-java-sources.ignore")
    modelPackage.set("com.dianatuman.practicum.domain")
    invokerPackage.set("com.dianatuman.practicum.server")
    apiPackage.set("com.dianatuman.practicum.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            requestMappingMode     : "controller",
            interfaceOnly          : "true",
            library                : "spring-boot",
            reactive               : "true",
            useSpringBoot3         : "true",
            useJakartaEe           : "true",
            useTags                : "true",
            dateLibrary            : "java8",
            openApiNullable        : "false",
            serializableModel      : "true",
            returnSuccessCode      : "true"
    ])
}

sourceSets.main {
    java.srcDirs("$projectDir/build/generated/src/main/java")
}
sourceSets.test {
    java.srcDirs("$projectDir/build/generated/src/test/java")
}

tasks.named('compileJava') {
    dependsOn(tasks.openApiGenerate)
}